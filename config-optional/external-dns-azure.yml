#@ load("@ytt:data", "data")
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: cert-manager
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services","endpoints","pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions","networking.k8s.io"]
  resources: ["ingresses"] 
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: cert-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns-azure
  namespace: cert-manager
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns-azure
  template:
    metadata:
      labels:
        app: external-dns-azure
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: registry.opensource.zalan.do/teapot/external-dns:v0.7.3
        args:
        - --source=service
        - --source=ingress
        - #@ "--domain-filter={}".format(data.values.azure.hosted_zone_name)
        - --provider=azure
        - #@ "--azure-resource-group={}".format(data.values.azure.resource_group_name)
        volumeMounts:
        - name: azure-config-file
          mountPath: /etc/kubernetes
          readOnly: true
      volumes:
      - name: azure-config-file
        secret:
          secretName: azure-config-file